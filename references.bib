@article{liuWang2013:agentTypesHLPE,
  title={{Reasoning about agent types and the hardest logic puzzle ever}},
  author={Liu, Fenrong and Wang, Yanjing},
  journal={Minds and Machines},
  volume={23},
  number={1},
  pages={123--161},
  publisher={Springer},
  year = 2013,
  doi = {10.1007/s11023-012-9287-x},
  url = {http://dx.doi.org/10.1007/s11023-012-9287-x},
}

@book{Knuth11CombAlg,
  author = "Knuth, Donald E.",
  publisher = "Addison-Wesley Professional",
  title = "{The Art of Computer Programming. Combinatorial Algorithms, Part 1}",
  volume = "4A",
  year = 2011
}

@article{AC3,
title = {{Consistency in networks of relations}},
journal = {Artificial Intelligence},
volume = {8},
number = {1},
pages = {99-118},
year = {1977},
issn = {0004-3702},
doi = {https://doi.org/10.1016/0004-3702(77)90007-8},
url = {https://www.sciencedirect.com/science/article/pii/0004370277900078},
author = {Alan K. Mackworth},
abstract = {Artificial intelligence tasks which can be formulated as constraint satisfaction problems, with which this paper is for the most part concerned, are usually by solved backtracking the examining the thrashing behavior that nearly always accompanies backtracking, identifying three of its causes and proposing remedies for them we are led to a class of algorithms whoch can profitably be used to eliminate local (node, arc and path) inconsistencies before any attempt is made to construct a complete solution. A more general paradigm for attacking these tasks is the altenation of constraint manipulation and case analysis producing an OR problem graph which may be searched in any of the usual ways. Many authors, particularly Montanari and Waltz, have contributed to the development of these ideas; a secondary aim of this paper is to trace that history. The primary aim is to provide an accessible, unified framework, within which to present the algorithms including a new path consistency algorithm, to discuss their relationships and the may applications, both realized and potential of network consistency algorithms.}
}

@inproceedings{GraphColRef,
author = {Garey, M. R. and Johnson, D. S. and Stockmeyer, L.},
title = {{Some simplified NP-complete problems}},
year = {1974},
isbn = {9781450374231},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800119.803884},
doi = {10.1145/800119.803884},
abstract = {It is widely believed that showing a problem to be NP-complete is tantamount to proving its computational intractability. In this paper we show that a number of NP-complete problems remain NP-complete even when their domains are substantially restricted. First we show the completeness of SIMPLE MAX CUT (MAX CUT with edge weights restricted to value 1), and, as a corollary, the completeness of the OPTIMAL LINEAR ARRANGEMENT problem. We then show that even if the domains of the NODE COVER and DIRECTED HAMILTONIAN PATH problems are restricted to planar graphs, the two problems remain NP-complete, and that these and other graph problems remain NP-complete even when their domains are restricted to graphs with low node degrees. For GRAPH 3-COLORABILITY, NODE COVER, and UNDIRECTED HAMILTONIAN CIRCUIT, we determine essentially the lowest possible upper bounds on node degree for which the problems remain NP-complete.},
booktitle = {Proceedings of the Sixth Annual ACM Symposium on Theory of Computing},
pages = {47â€“63},
numpages = {17},
location = {Seattle, Washington, USA},
series = {STOC '74}
}

@misc{ashing_jabenjysudoku,
	title = {Jabenjy/{Sudoku}: {Completed} {Sudoku} solver written in {Haskell} as part of an assignment as part of a {Functional} {Programming} module.},
	url = {https://github.com/Jabenjy/Sudoku},
	date = {2015-10-12},
	urldate = {2025-03-22},
	author = {Ashing, Ben},
	file = {Jabenjy/Sudoku\: Completed Sudoku solver written in Haskell as part of an assignment as part of a Functional Programming module.:C\:\\Users\\denna\\Zotero\\storage\\4I4D3E5D\\Sudoku.html:text/html},
}